module Eratosthenesexports alldefinitionsstate Sieve of    sieve : seq of boolinit s == s = mk_Sieve([])endoperations    createSieve : nat1 ==> ()    createSieve(size) == sieve := [false | i in set {1, ..., size}]    pre  size > 1    post  len sieve = size and (forall b in seq sieve & not b);end Eratosthenes